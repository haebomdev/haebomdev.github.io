---
layout: post
title: "Basic of Python"
date: 2023-10-14 18:39:35 +0900
authors: [lazybuttrying, MapleSyrup]
reviewers: [wow]
description: "Python Fundamental"
thumbnail: https://img.freepik.com/free-vector/app-development-concept-with-desk-desktop_23-2148699345.jpg?w=996&t=st=1697547195~exp=1697547795~hmac=57b8d06f1f5e90e72837915688ae073cdee7e82445c7d0f2ac44315cd43a140e
---

Python은 프로그래밍 언어 중에서 가장 쉽게 배울 수 있는 언어 중 하나입니다. 아래에서 Python의 기초 코드 요소에 대한 설명을 제공하겠습니다.

# 1. 변수 (Variables)

변수는 값을 저장하고 참조하는 데 사용됩니다. 변수 이름은 대소문자를 구분하며, 의미 있는 이름을 사용하는 것이 좋습니다.

```python
x = 5 # 정수 값을 저장
name = "John" # 문자열 값을 저장
```

# 2. 데이터 타입 (Data Types)

Python은 여러 데이터 유형을 지원합니다. 몇 가지 중요한 데이터 유형은 다음과 같습니다:

- int: 정수 (예: 5)
- float: 부동 소수점 숫자 (예: 3.14)
- str: 문자열 (예: "Hello, World!")
- bool: 부울 (예: True 또는 False)
  데이터 유형은 자동으로 유추되기 때문에 명시적으로 선언할 필요가 없습니다.

# 3. 출력 (Output)

print() 함수를 사용하여 결과를 출력할 수 있습니다.

```python
print("Hello, World!")
```

# 4. 입력 (Input)

사용자 입력을 받으려면 input() 함수를 사용합니다.

```python
name = input("이름을 입력하세요: ")
```

# 5. 조건문 (Conditional Statements)

if, elif, else를 사용하여 조건문을 만들 수 있습니다.

```python
age = 18
if age < 18:
print("미성년자입니다.")
else:
print("성인입니다.")
```

# 6. 반복문 (Loops)

for와 while 루프를 사용하여 작업을 반복할 수 있습니다.

```python
for i in range(5):
print(i) # 0부터 4까지 출력

while condition: # 조건이 참인 동안 실행
```

# 7. 함수 (Functions)

함수를 정의하여 코드를 재사용할 수 있습니다.

```python
def greet(name):
print(f"안녕하세요, {name}!")

greet("Alice")
```

# 8. 리스트 (Lists)

리스트는 여러 값을 저장하는 데 사용됩니다. 값은 쉼표로 구분되며, 대괄호로 묶입니다.

```python
fruits = ["사과", "바나나", "오렌지"]
```

# 9. 딕셔너리 (Dictionaries):

딕셔너리는 키-값 쌍을 저장하는 데 사용됩니다.

```python
person = {"이름": "John", "나이": 30, "성별": "남성"}
```

# 10. 모듈 (Modules)

Python은 다양한 기능을 모듈로 제공합니다. 모듈을 가져와서 함수 및 클래스를 사용할 수 있습니다.

```python
import math
result = math.sqrt(25) # math 모듈에서 제곱근 함수 사용
```

이것은 Python의 기초 코드 요소에 대한 간단한 소개입니다. Python을 더 깊이 이해하려면 공식 Python 문서 및 온라인 자습서를 참조하는 것이 도움이 될 것입니다.
